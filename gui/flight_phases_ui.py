# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'flight_phases.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget, QApplication
from systems_dialog import Ui_DialogSystem
import resources_rc

class Ui_FlightPhaseWidget(object):
    
    def setupUi(self, FlightPhaseWidget):
        FlightPhaseWidget.setObjectName("FlightPhaseWidget")
        #Form.resize(400, 300)
        self.flightPhase_widget = QtWidgets.QWidget(FlightPhaseWidget)
        self.flightPhase_widget.setFixedSize(350, 120)  # Ensure the widget doesn't shrink below this size
        #self.flightPhase_widget.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        #self.flightPhase_widget.setGeometry(QtCore.QRect(0, 0, 350, 120))
     
        self.flightPhase_widget.setStyleSheet("background: rgb(52, 152, 219)")
        self.flightPhase_widget.setObjectName("flightPhase_widget")
        
        #self.flightPhase_widget.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)

        self.gridLayout = QtWidgets.QGridLayout(self.flightPhase_widget)
        self.gridLayout.setContentsMargins(0, 0, 0, 10)
        self.gridLayout.setSpacing(10)

        self.gridLayout.setObjectName("gridLayout")
        self.delete_flightPhase = QtWidgets.QToolButton(self.flightPhase_widget)
        self.delete_flightPhase.setStyleSheet("background-color: rgb(255, 255, 255);")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("C:/Users/yumna/project11/semester_thesis/src/gui/resources/icon_images/trash_blue.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.delete_flightPhase.setIcon(icon)
        self.delete_flightPhase.setIconSize(QtCore.QSize(25, 25))
        self.delete_flightPhase.setObjectName("delete_flightPhase")
        #self.delete_flightPhase.clicked.connect(self.confirm_delete_flight_phase)
        self.gridLayout.addWidget(self.delete_flightPhase, 0, 7, 2, 2, alignment=QtCore.Qt.AlignTop | QtCore.Qt.AlignRight)
        self.flightPhase_order = QtWidgets.QTextBrowser(self.flightPhase_widget)
        self.flightPhase_order.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flightPhase_order.setObjectName("flightPhase_order")
        self.flightPhase_order.setMinimumSize(QtCore.QSize(40,40))
        self.flightPhase_order.setMaximumSize(QtCore.QSize(40,45))
        self.gridLayout.addWidget(self.flightPhase_order, 0, 0, 1, 1)
        self.flightPhase_label = QtWidgets.QLabel(self.flightPhase_widget)
        self.flightPhase_label.setObjectName("flightPhase_label")
        self.flightPhase_label.setMinimumSize(QtCore.QSize(120, 50))
        self.flightPhase_label.setStyleSheet("font-size: 9pt; font-weight: 600; color: white;")

        self.gridLayout.addWidget(self.flightPhase_label, 1, 1, 1, 7, alignment=QtCore.Qt.AlignCenter)
        self.up_down_container = QtWidgets.QWidget(self.flightPhase_widget)
        self.up_down_container.setObjectName("up_down_container")

        
        
        self.verticalLayout = QtWidgets.QVBoxLayout(self.up_down_container)
        self.verticalLayout.setObjectName("verticalLayout")
        self.verticalLayout.setContentsMargins(0,0,0,0)
        
        self.up_flightPhase = QtWidgets.QToolButton(self.up_down_container)
        self.up_flightPhase.setStyleSheet("background-color: rgb(255, 255, 255);")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("C:/Users/yumna/project11/semester_thesis/src/gui/resources/icon_images/up_blue.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.up_flightPhase.setIcon(icon1)
        self.up_flightPhase.setIconSize(QtCore.QSize(25, 25))
        self.up_flightPhase.setFixedSize(30, 30)
        self.up_flightPhase.setObjectName("up_flightPhase")
        self.verticalLayout.addWidget(self.up_flightPhase)
        self.down_flightPhase = QtWidgets.QToolButton(self.up_down_container)
        self.down_flightPhase.setStyleSheet("background-color: rgb(255, 255, 255);")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("C:/Users/yumna/project11/semester_thesis/src/gui/resources/icon_images/down_blue.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.down_flightPhase.setIcon(icon2)
        self.down_flightPhase.setIconSize(QtCore.QSize(25, 25))
        self.down_flightPhase.setFixedSize(30, 30)
        self.down_flightPhase.setObjectName("down_flightPhase")
        #if self.main_window:  # Check that main_window is set
        #    self.up_flightPhase.clicked.connect(lambda: self.main_window.move_flight_phase_up(self))
        #    self.down_flightPhase.clicked.connect(lambda: self.main_window.move_flight_phase_down(self))
        self.up_down_container.setFixedSize(40, 70)  # Set the size of the container widget
        self.verticalLayout.setSpacing(5)
        self.up_down_container.setContentsMargins(0,0,0,5)
        

        
        self.verticalLayout.addWidget(self.down_flightPhase)
        self.gridLayout.addWidget(self.up_down_container, 4, 0,1,1, alignment=QtCore.Qt.AlignBottom | QtCore.Qt.AlignLeft)

        #self.gridLayout.addWidget(self.up_down_container, 4, 0, 1, 1)
        self.container_flight_Phase_Buttons = QtWidgets.QWidget(self.flightPhase_widget)
        self.container_flight_Phase_Buttons.setObjectName("container_flight_Phase_Buttons")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.container_flight_Phase_Buttons)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        

        self.edit_flightPhase = QtWidgets.QToolButton(self.container_flight_Phase_Buttons)
        self.edit_flightPhase.setStyleSheet("background-color: rgb(255, 255, 255);")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("C:/Users/yumna/project11/semester_thesis/src/gui/resources/icon_images/pen.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.edit_flightPhase.setIcon(icon3)
        self.edit_flightPhase.setIconSize(QtCore.QSize(25, 25))
        self.edit_flightPhase.setFixedSize(QtCore.QSize(30, 30))
        self.edit_flightPhase.setObjectName("edit_flightPhase")
        #self.edit_flightPhase.clicked.connect(self.enable_edit_mode)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(5)

        self.verticalLayout_2.addWidget(self.edit_flightPhase)
        self.systems_flightPhase = QtWidgets.QToolButton(self.container_flight_Phase_Buttons)
        self.systems_flightPhase.setStyleSheet("background-color: rgb(255, 255, 255);")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("C:/Users/yumna/project11/semester_thesis/src/gui/resources/icon_images/cogwheel.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.systems_flightPhase.setIcon(icon4)
        self.systems_flightPhase.setIconSize(QtCore.QSize(25, 25))
        self.systems_flightPhase.setFixedSize(QtCore.QSize(30, 30))
        #self.systems_flightPhase.clicked.connect(self.open_system_dialog)

        self.verticalLayout_2.addWidget(self.systems_flightPhase)
        self.container_flight_Phase_Buttons.setFixedSize(40, 70)  # Set the size of the container widget
        self.container_flight_Phase_Buttons.setContentsMargins(10,0,0,5)
        self.gridLayout.addWidget(self.container_flight_Phase_Buttons, 4, 7, 5, 2, alignment=QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight)
       
        self.retranslateUi(FlightPhaseWidget)
        QtCore.QMetaObject.connectSlotsByName(FlightPhaseWidget)

    
    #def confirm_delete_flight_phase(self):
        """Opens a confirmation dialog to ask the user if they want to delete the flight phase."""
    #    dialog = QtWidgets.QMessageBox()
    #    dialog.setWindowTitle("Confirm Deletion")
    #    dialog.setText("Are you sure you want to delete this flight phase?")
    #    dialog.setStandardButtons(QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No)
    #    dialog.setIcon(QtWidgets.QMessageBox.Warning)
        
    #    response = dialog.exec_()

    #    if response == QtWidgets.QMessageBox.Yes:
            # If user clicks "Yes", delete the flight phase widget
    #        self.flightPhase_widget.deleteLater()
         # If "No" is clicked, the dialog just closes without action. 
    #def enable_edit_mode(self):
        """Replace the label with a QLineEdit for editing."""
        # Extract plain text from HTML label
    #    plain_text = self.flightPhase_label.text().replace("<html><head/><body><p align='center'><span style='font-size:9pt; font-weight:600; color:white;'>", "").replace("</span></p></body></html>", "")
        
        # Create a QLineEdit
    #    self.lineEdit = QtWidgets.QLineEdit(self.flightPhase_widget)
    #    self.lineEdit.setText(plain_text)  # Set the plain label text to the line edit
    #    self.lineEdit.setMinimumSize(self.flightPhase_label.minimumSize())  # Match size with label
    #    self.lineEdit.setMaximumSize(self.flightPhase_label.maximumSize())  # Match size with label
    #    self.gridLayout.replaceWidget(self.flightPhase_label, self.lineEdit)  # Replace label with line edit
    #    self.flightPhase_label.hide()  # Hide the label

        # Connect editing finished to a function to save the changes
    #    self.lineEdit.editingFinished.connect(self.save_edited_label)

    #def save_edited_label(self):
        """Save the edited text and replace the QLineEdit with the QLabel."""
     #   new_text = self.lineEdit.text()
        # Update the label text with HTML to preserve the style (font size, weight, color)
    #    self.flightPhase_label.setText(f"<html><head/><body><p align='center'><span style='font-size:9pt; font-weight:600; color:white;'>{new_text}</span></p></body></html>")
        
    #    self.gridLayout.replaceWidget(self.lineEdit, self.flightPhase_label)  # Replace line edit with label
    #    self.lineEdit.deleteLater()  # Remove the line edit
    #    self.flightPhase_label.show()

    #def open_system_dialog(self):
        """Opens the Systems Dialog when the systems button is clicked."""
    #    dialog = QtWidgets.QDialog()  # Create a QDialog instance
    #    ui = Ui_DialogSystem()  # Create an instance of the Ui_Dialog class
    #    ui.setupUi(dialog)  # Set up the UI for the dialog
    #    dialog.exec_()  # Open the dialog
    def retranslateUi(self, FlightPhaseWidget):
        _translate = QtCore.QCoreApplication.translate
        #Form.setWindowTitle(_translate("Form", "Form"))
        self.delete_flightPhase.setText(_translate("Form", "..."))
        self.flightPhase_label.setText("Flight Phase")

        self.up_flightPhase.setText(_translate("Form", "..."))
        self.down_flightPhase.setText(_translate("Form", "..."))
        self.edit_flightPhase.setText(_translate("Form", "..."))
        self.systems_flightPhase.setText(_translate("Form", "..."))    



   

#if __name__ == "__main__":
#    import sys
#    app = QtWidgets.QApplication(sys.argv)
#    widget = FlightPhaseWidget()  # Create an instance of the widget
#    widget.show()  # Show the widget
#    sys.exit(app.exec_())
