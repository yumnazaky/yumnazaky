# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow1.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
import os 
import math
import resources_rc 


# get the current directory
current_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# get the directory of GUI (which is in a sibling folder)
GUI_path = os.path.join(current_dir, "gui")
module_path = os.path.join(current_dir,"modules")# add GUI path to the system path
sys.path.append(GUI_path) 
sys.path.append(module_path)

from PyQt5 import QtCore, QtGui, QtWidgets

from PyQt5.QtWidgets import QMessageBox  # Correct import for QMessageBox
#from enter_new_flight_phase_ui import Ui_Dialog
from enter_new_operation_dialog_ui import Ui_New_operation_type  # Import the dialog code
#from flight_phases_ui import FlightPhaseWidget
#from systems_dialog import Ui_DialogSystem
from comments_for_procedures11 import Ui_DialogProceduresComments  
from reference_for_procedures import Ui_DialogReferencesProcedure



class Ui_flightFlow_main_window(object):
   
       
    def setupUi(self, flightFlow_main_window):
        flightFlow_main_window.setObjectName("flightFlow_main_window")
        flightFlow_main_window.resize(1200, 610)
        #flightFlow_main_window.setMinimumSize(1200,610)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(flightFlow_main_window.sizePolicy().hasHeightForWidth())
        flightFlow_main_window.setSizePolicy(sizePolicy)
        desktop = QtWidgets.QApplication.desktop()
        screenRect = desktop.screenGeometry()
        screen_width = screenRect.width()
        screen_height = screenRect.height()


        self.centralwidget = QtWidgets.QWidget(flightFlow_main_window)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.splitter = QtWidgets.QSplitter(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.flightphases_widget = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.flightphases_widget.sizePolicy().hasHeightForWidth())


        self.flightphases_widget.setSizePolicy(sizePolicy)
        #self.flightphases_widget.setMinimumSize(QtCore.QSize(350, 120))
        self.flightphases_widget.setMaximumSize(QtCore.QSize(380, 1500))
        self.flightphases_widget.setStyleSheet("background: rgb(52, 152, 219)")
        self.flightphases_widget.setObjectName("flightphases_widget")
        #self.flightphases_widget.setContentsMargins(0,0,0,0)

        
        self.verticalLayout = QtWidgets.QVBoxLayout(self.flightphases_widget)
        
        
        
              



     
       
        self.flightPhases_tabs = QtWidgets.QTabWidget(self.flightphases_widget)
        self.flightPhases_tabs.setStyleSheet("background-color: rgb(165, 165, 165);")
        self.flightPhases_tabs.setDocumentMode(True)
        self.flightPhases_tabs.setTabsClosable(True)
        self.flightPhases_tabs.setMovable(True)
        self.flightPhases_tabs.setContentsMargins(0,0,0,0)
        #self.flightPhases_tabs.setMaximumSize(400,1400)

        self.flightPhases_tabs.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.flightPhases_tabs.setObjectName("flightPhases_tabs")
        


        self.verticalLayout.setObjectName("verticalLayout")

        self.verticalLayout.addWidget(self.flightPhases_tabs)
        

        self.normal_operations = QtWidgets.QWidget()
        self.normal_operations.setObjectName("normal_operations")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.normal_operations)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.scrollArea_flightPhases = QtWidgets.QScrollArea(self.normal_operations)
        self.scrollArea_flightPhases.setStyleSheet("\n"
"background-color: rgb(165, 165, 165) ")
        self.scrollArea_flightPhases.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.scrollArea_flightPhases.setWidgetResizable(True)
        self.scrollArea_flightPhases.setObjectName("scrollArea_flightPhases")
        self.scrollArea_flightPhases.setContentsMargins(0,0,0,0)

        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        #self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 370, 1485))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.verticalLayout_8.setContentsMargins(5, 0, 5, 0)
        self.verticalLayout_8.setSpacing(0)
      


     


        #self.flightPhase_widget = QtWidgets.QWidget(self.scrollAreaWidgetContents)

        #self.flightPhase_widget.setSizePolicy(sizePolicy)

        #self.flightPhase_widget.setMinimumSize(QtCore.QSize(300, 120)) 
        #self.flightPhase_widget.setMaximumSize(QtCore.QSize(350,120))
        #self.verticalLayout_8.addWidget(self.flightPhase_widget)

        #self.flightPhase_widget.setStyleSheet("background: rgb(52, 152, 219)")
        #self.flightPhase_widget.setObjectName("flightPhase_widget")
        #self.verticalLayout_8.addWidget(self.flightPhase_widget, alignment=QtCore.Qt.AlignTop)
        
        self.scrollArea_flightPhases.setWidget(self.scrollAreaWidgetContents)


        #self.gridLayout = QtWidgets.QGridLayout(self.flightPhase_widget)
        #self.gridLayout.setObjectName("gridLayout")

        #self.flightPhase_order = QtWidgets.QTextBrowser(self.flightPhase_widget)
        #self.flightPhase_order.setStyleSheet("background-color: rgb(255, 255, 255);")
        #self.flightPhase_order.setObjectName("flightPhase_order")
        #self.flightPhase_order.setSizePolicy(sizePolicy)
        #self.flightPhase_order.setMinimumSize(QtCore.QSize(40,40))
        #self.flightPhase_order.setMaximumSize(QtCore.QSize(40,45))
        #self.gridLayout.addWidget(self.flightPhase_order, 0, 0, 1, 1)
        #self.delete_flightPhase = QtWidgets.QToolButton(self.flightPhase_widget)
        #self.delete_flightPhase.setStyleSheet("background-color: rgb(255, 255, 255);")
        #icon = QtGui.QIcon()
        #icon.addPixmap(QtGui.QPixmap("trash_blue.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        #self.delete_flightPhase.setIcon(icon)
        #self.delete_flightPhase.setIconSize(QtCore.QSize(25, 25))
        #self.delete_flightPhase.setObjectName("delete_flightPhase")
       
        #self.gridLayout.addWidget(self.delete_flightPhase, 0, 6, 2, 2, alignment=QtCore.Qt.AlignTop | QtCore.Qt.AlignRight)
        
        
        
        

   



        
        #self.flightPhase_label = QtWidgets.QLabel(self.flightPhase_widget)
        #self.flightPhase_label.setObjectName("flightPhase_label")
        #self.flightPhase_label.setAlignment(QtCore.Qt.AlignCenter)
        

        #self.flightPhase_label.setMinimumSize(QtCore.QSize(120, 50))  # Set a minimum width and height
        #self.flightPhase_label.setMaximumSize(QtCore.QSize(120, 60))
        #self.flightPhase_label.setText("Flight Phase")
        #self.flightPhase_label.setStyleSheet(" font-weight: bold; color: white;font-size:9pt;")
        # Assuming your grid layout has multiple columns, adjust the span accordingly
        #self.gridLayout.addWidget(self.flightPhase_label, 1, 1, 1, 6, alignment=QtCore.Qt.AlignCenter)
        #self.upDownContainer = QtWidgets.QWidget(self.flightPhase_widget)
        #self.upDownContainer.setObjectName("upDownContainer")
        #self.verticalLayout_buttons = QtWidgets.QVBoxLayout(self.upDownContainer)
        #self.verticalLayout_buttons.setObjectName("verticalLayout_buttons")
        #self.verticalLayout_buttons.setContentsMargins(0, 0, 0, 0)
        #self.verticalLayout_buttons.setSpacing(5)
        #self.up_flightPhase = QtWidgets.QToolButton(self.upDownContainer)
        #self.up_flightPhase.setStyleSheet("background-color: rgb(255, 255, 255);")
        #icon1 = QtGui.QIcon()
        #icon1.addPixmap(QtGui.QPixmap("up_blue.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        #self.up_flightPhase.setIcon(icon1)
        #self.up_flightPhase.setIconSize(QtCore.QSize(25, 25))
        #self.up_flightPhase.setFixedSize(30, 30)
        #self.up_flightPhase.setObjectName("up_flightPhase")

        


        #self.verticalLayout_buttons.addWidget(self.up_flightPhase)
      
        
      


        
        
        #self.down_flightPhase = QtWidgets.QToolButton(self.upDownContainer)
        #self.down_flightPhase.setStyleSheet("background-color: rgb(255, 255, 255);")
        #icon2 = QtGui.QIcon()
        #icon2.addPixmap(QtGui.QPixmap("down_blue.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        #self.down_flightPhase.setIcon(icon2)
        #self.down_flightPhase.setIconSize(QtCore.QSize(25, 25))
        #self.down_flightPhase.setFixedSize(30, 30)
        #self.down_flightPhase.setObjectName("down_flightPhase")
        #self.verticalLayout_buttons.addWidget(self.down_flightPhase)
        #self.upDownContainer.setFixedSize(30, 70)  # Set the size of the container widget
        #self.upDownContainer.setContentsMargins(0,0,0,15)
        #self.upDownContainer.setSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
         



        #self.gridLayout.addWidget(self.upDownContainer, 4, 0)
        #self.gridLayout.addWidget(self.upDownContainer, 4, 0, alignment=QtCore.Qt.AlignBottom | QtCore.Qt.AlignLeft)

        #self.container_flightPhaseButtons = QtWidgets.QWidget(self.flightPhase_widget)
        

        #self.verticalLayout_flightPhaseButtons = QtWidgets.QVBoxLayout()

        #self.verticalLayout_flightPhaseButtons.setContentsMargins(0, 0, 0, 0)
        #self.verticalLayout_flightPhaseButtons.setSpacing(5)

        #self.edit_flightPhase = QtWidgets.QToolButton(self.flightPhase_widget)
        #self.edit_flightPhase.setStyleSheet("background-color: rgb(255, 255, 255);")
        #icon3 = QtGui.QIcon()
        #icon3.addPixmap(QtGui.QPixmap("pen.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        #self.edit_flightPhase.setIcon(icon3)
        #self.edit_flightPhase.setIconSize(QtCore.QSize(25, 25))
        #self.edit_flightPhase.setFixedSize(QtCore.QSize(30, 30))
        #self.edit_flightPhase.setObjectName("edit_flightPhase")
        # Connect the edit button to the function to edit the label
    
        #self.edit_flightPhase.clicked.connect(lambda: self.edit_flightPhase_label(self.flightPhase_label, self.flightPhase_widget))


            # Add the flight phase widget to the layout
        #self.verticalLayout_8.addWidget(self.flightPhase_widget)
        #flightFlow_main_window.setCentralWidget(self.centralwidget)

      
        #self.container_flightPhaseButtons.setLayout(self.verticalLayout_flightPhaseButtons)
        #self.verticalLayout_flightPhaseButtons.addWidget(self.edit_flightPhase)

        
        #self.systems_flightPhase = QtWidgets.QToolButton(self.flightPhase_widget)
        #self.systems_flightPhase.setStyleSheet("background-color: rgb(255, 255, 255);")
        #icon4 = QtGui.QIcon()
        #icon4.addPixmap(QtGui.QPixmap("Downloads/cogwheel.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        #self.systems_flightPhase.setIcon(icon4)
        #self.systems_flightPhase.setIconSize(QtCore.QSize(25, 25))
        #self.systems_flightPhase.setFixedSize(QtCore.QSize(30, 30))
        #self.systems_flightPhase.setObjectName("systems_flightPhase")
        #self.verticalLayout_flightPhaseButtons.addWidget(self.systems_flightPhase)
        
        #self.container_flightPhaseButtons.setFixedSize(30, 70)  # Set the size of the container widget
        #self.container_flightPhaseButtons.setContentsMargins(0,0,0,15)
        #self.container_flightPhaseButtons.setSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)


        #self.gridLayout.addWidget(self.container_flightPhaseButtons, 4, 6, 5, 2, alignment=QtCore.Qt.AlignBottom | QtCore.Qt.AlignRight)
       

        
        #self.gridLayout.setContentsMargins(0, 0, 0, 0)

       

        #self.verticalLayout_8.addWidget(self.flightPhase_widget)
        self.scrollArea_flightPhases.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_4.addWidget(self.scrollArea_flightPhases)
        #self.flightPhases_tabs.addTab(self.normal_operations, "")
        #self.tab_2 = QtWidgets.QWidget()
        #self.tab_2.setObjectName("tab_2")
        #self.flightPhases_tabs.addTab(self.tab_2, "")
        self.verticalLayout.addWidget(self.flightPhases_tabs)
        


        self.horizontalWidget_buttons = QtWidgets.QWidget(self.flightphases_widget)

        self.horizontalWidget_buttons.setObjectName("horizontalWidget_buttons")



     





        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalWidget_buttons)

        self.horizontalLayout.setObjectName("horizontalLayout")


        self.newOperationType_button = QtWidgets.QPushButton(self.horizontalWidget_buttons)
        self.newOperationType_button.setStyleSheet("background-color: rgb(165, 165, 165);\n"
"color: rgb(255, 255, 255);")
        self.newOperationType_button.setObjectName("newOperationType_button")
 
        #self.newOperationType_button.clicked.connect(self.open_new_operation_dialog)
        
        


        self.horizontalLayout.addWidget(self.newOperationType_button)
      

        self.newFlightPhase_button = QtWidgets.QPushButton(self.horizontalWidget_buttons)
        self.newFlightPhase_button.setStyleSheet("background-color: rgb(165, 165, 165);\n"
"color: rgb(255, 255, 255);")
        self.newFlightPhase_button.setObjectName("newFlightPhase_button")
        #self.newFlightPhase_button.clicked.connect(self.open_new_flight_phase_dialog)



        self.verticalLayout.addWidget(self.flightPhases_tabs)

        self.verticalLayout.addWidget(self.horizontalWidget_buttons)
        self.horizontalWidget_buttons =QtWidgets.QWidget(self.centralwidget)
        #self.flightPhases_tabs = QtWidgets.QTabWidget(self.centralwidget)
        

        # Add the flight phases widget to the main horizontal layout
        self.horizontalLayout_2.addWidget(self.flightphases_widget)

       
   

        # Set the central widget of the main window
        flightFlow_main_window.setCentralWidget(self.centralwidget)
        





        

        

        
        QtCore.QMetaObject.connectSlotsByName(flightFlow_main_window)
        self.horizontalLayout.addWidget(self.newFlightPhase_button)
        self.verticalLayout.addWidget(self.horizontalWidget_buttons)
        self.horizontalLayout_2.addWidget(self.flightphases_widget)


        self.warningWidget = QtWidgets.QWidget(self.centralwidget)
        self.warningWidget.setStyleSheet("background-color:rgb(255, 165, 0)")
        self.warningWidget.setObjectName("warningWidget")
        #self.warningWidget.setMinimumSize(QtCore.QSize(300, 1500))  # Minimum size for the warning widget
        self.warningWidget.setMaximumSize(QtCore.QSize(320, 1490))

        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.warningWidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")

        # Warning Header
        self.warningHeader = QtWidgets.QWidget(self.warningWidget)
        self.warningHeader.setStyleSheet("background-color: rgb(255, 165, 0)")
        self.warningHeader.setObjectName("warningHeader")
        self.warningHeader.setMinimumSize(QtCore.QSize(300, 70))  # Minimum size for the warning widget
        self.warningHeader.setMaximumSize(QtCore.QSize(320, 70))

        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.warningHeader)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")

 # Label Warning
        self.label_warning = QtWidgets.QLabel(self.warningHeader)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_warning.setFont(font)
        self.label_warning.setMaximumSize(200,50)
        self.label_warning.setStyleSheet("background-color:rgb(255, 165, 0)")
        self.label_warning.setObjectName("label_warning")
        self.label_warning.setText("Warning")  # Add warning text

        self.horizontalLayout_6.addWidget(self.label_warning)

        # Warning Icon
        self.warningPic = QtWidgets.QLabel(self.warningHeader)
        self.warningPic.setText("")
        self.warningPic.setPixmap(QtGui.QPixmap("C:/Users/yumna/project11/semester_thesis/src/gui/resources/icon_images/warning.png"))
        self.warningPic.setScaledContents(True)
        self.warningPic.setFixedSize(60, 50)
        self.warningPic.setAlignment(QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.warningPic.setObjectName("warningPic")
        self.horizontalLayout_6.addWidget(self.warningPic)

        self.verticalLayout_2.addWidget(self.warningHeader)

      # Scroll Area for Warning Details
        self.scrollArea_warning = QtWidgets.QScrollArea(self.warningWidget)
        self.scrollArea_warning.setStyleSheet("background-color: rgb(255, 165, 0)")
        self.scrollArea_warning.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.scrollArea_warning.setLineWidth(0)
        self.scrollArea_warning.setWidgetResizable(True)
        self.scrollArea_warning.setObjectName("scrollArea_warning")

        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")

      # Vertical Layout for Scroll Area Content
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_3)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setSpacing(5)

  # Warning Display Label inside the Scroll Area
        #self.warning_display = QtWidgets.QLabel(self.scrollAreaWidgetContents_3)
        #self.warning_display.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        #self.warning_display.setStyleSheet("border: 1px solid red;")

        #font = QtGui.QFont()
        #font.setFamily("Arial")   # Set font family
        #font.setPointSize(5)     # Set font size
        #font.setBold(True)        # Set bold
        #font.setItalic(False)
        #self.warning_display.setText("")

        #self.warning_display.setFont(font)
        
        



        #self.warning_display.setWordWrap(True)
        #self.warning_display.setMinimumSize(290, 230)

        #self.warning_display.update() 
        #self.warning_display.setVisible(True)
        #self.warning_display.setObjectName("warning_display")
        #self.warning_display.raise_()  # Bring it to the front
        




        #self.verticalLayout_5.addWidget(self.warning_display, 0, QtCore.Qt.AlignCenter | QtCore.Qt.AlignTop)

   # Set Scroll Area's Content Widget
        self.scrollArea_warning.setWidget(self.scrollAreaWidgetContents_3)
        self.verticalLayout_2.addWidget(self.scrollArea_warning)

       
        self.horizontalLayout_2.addWidget(self.warningWidget)
        self.scrollArea_Flightflow = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea_Flightflow.setStyleSheet("background-color: rgb(165, 165, 165);")
        self.scrollArea_Flightflow.setWidgetResizable(True)
        self.scrollArea_Flightflow.setObjectName("scrollArea_Flightflow")
      

        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 391, 560))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.top_combo_widget = QtWidgets.QWidget(self.scrollAreaWidgetContents_2)
        self.top_combo_widget.setStyleSheet("background-color: rgb(255, 255, 255);")  # Adjust color if needed
        self.top_combo_widget.setObjectName("top_combo_widget")
        self.top_combo_layout = QtWidgets.QHBoxLayout(self.top_combo_widget)  # Horizontal layout for the combo box
        self.top_combo_layout.setObjectName("top_combo_layout")

        self.comboBox_flight_phases = QtWidgets.QComboBox(self.top_combo_widget)
        self.comboBox_flight_phases.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.comboBox_flight_phases.setEditable(False)
        self.comboBox_flight_phases.setStyleSheet("QComboBox {height: 35px;}")
        
        self.comboBox_flight_phases.addItem("Select Flight Phase")
        self.comboBox_flight_phases.setCurrentIndex(0) 
        
        self.comboBox_flight_phases.setObjectName("comboBox_flight_phases")
        self.top_combo_layout.addWidget(self.comboBox_flight_phases)

        self.reload_button = QtWidgets.QToolButton(self.top_combo_widget)
        self.reload_button.setStyleSheet("background-color: rgb(255, 255, 255);")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("C:/Users/yumna/project11/semester_thesis/src/gui/resources/icon_images/reloadwhiteblue.jpeg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.reload_button.setIcon(icon9)
        self.reload_button.setIconSize(QtCore.QSize(25, 30))
        self.reload_button.setObjectName("reload_button")
        #self.gridLayout_2.addWidget(self.reload_all)
        self.top_combo_layout.addWidget(self.reload_button)
        # Add the top combo widget to the vertical layout
        self.verticalLayout_3.addWidget(self.top_combo_widget)

        self.comboContainer = QtWidgets.QWidget(self.scrollAreaWidgetContents_2)
        self.comboContainer.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.comboContainer.setObjectName("comboContainer")
        self.gridLayout_2 = QtWidgets.QHBoxLayout(self.comboContainer)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.comboBox_procedures = QtWidgets.QComboBox(self.comboContainer)
        #self.comboBox_flight_phases.setMinimumSize(900,50)
        self.comboBox_procedures.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.comboBox_procedures.setEditable(False)
        self.comboBox_procedures.addItem("Select Procedure")
        self.comboBox_procedures.setCurrentIndex(0) 
        self.comboBox_procedures.setStyleSheet("QComboBox {height: 35px;}")

        self.comboBox_procedures.setObjectName("comboBox_procedures")

        # In the setupUi method or constructor
        #self.comboBox_flight_phases.currentIndexChanged.connect(self.on_combo_box_changed)

        self.gridLayout_2.addWidget(self.comboBox_procedures)
        # New "New Procedure" Button
        self.new_procedure_button = QtWidgets.QPushButton(self.comboContainer)
        self.new_procedure_button.setText("New Procedure")
        self.new_procedure_button.setMaximumSize(150, 50)
        self.new_procedure_button.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.new_procedure_button.setObjectName("new_procedure_button")
        self.gridLayout_2.addWidget(self.new_procedure_button)
        self.new_procedureStep = QtWidgets.QToolButton(self.comboContainer)

        self.new_procedureStep.setStyleSheet("background-color: rgb(255, 255, 255);")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("C:/Users/yumna/project11/semester_thesis/src/gui/resources/icon_images/add_blue.jpeg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.new_procedureStep.setIcon(icon5)
        self.new_procedureStep.setMaximumSize(120,50)
        self.new_procedureStep.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.new_procedureStep.setObjectName("new_procedureStep")
        self.gridLayout_2.addWidget(self.new_procedureStep)
        # Add "Add Checkpoint" button in red color
        #self.add_checkpoint_button = QtWidgets.QPushButton(self.comboContainer)
        #self.add_checkpoint_button.setText("Add Checkpoint")
        #self.add_checkpoint_button.setMaximumSize(150, 50)
        #self.add_checkpoint_button.setStyleSheet("color: red; background-color: rgb(255, 255, 255);")
        #self.add_checkpoint_button.setObjectName("add_checkpoint_button")
        #self.gridLayout_2.addWidget(self.add_checkpoint_button)  # Adjusting the grid position

        self.reload = QtWidgets.QToolButton(self.comboContainer)
        self.reload.setStyleSheet("background-color: rgb(255, 255, 255);")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("C:/Users/yumna/project11/semester_thesis/src/gui/resources/icon_images/reloadwhiteblue.jpeg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.reload.setIcon(icon6)
        self.reload.setIconSize(QtCore.QSize(25, 30))
        self.reload.setObjectName("reload")
        self.gridLayout_2.addWidget(self.reload)
        self.verticalLayout_3.addWidget(self.comboContainer)
        self.scrollArea_procedure_list = QtWidgets.QScrollArea(self.scrollAreaWidgetContents_2)
        self.scrollArea_procedure_list.setMouseTracking(False)
        self.scrollArea_procedure_list.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.scrollArea_procedure_list.setLineWidth(1)
        self.scrollArea_procedure_list.setWidgetResizable(True)
        self.scrollArea_procedure_list.setObjectName("scrollArea_procedure_list")
        self.scrollAreaWidgetContents_4 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_4.setGeometry(QtCore.QRect(0, 0, 551, 449))
        self.scrollAreaWidgetContents_4.setObjectName("scrollAreaWidgetContents_4")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_4)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.verticalLayout_7.setSpacing(0)  # No spacing between widgets
        self.verticalLayout_7.setContentsMargins(5, 5, 5, 5)
        self.scrollArea_procedure_list.setWidget(self.scrollAreaWidgetContents_4)
        #self.procedureStep_widget = QtWidgets.QWidget(self.scrollAreaWidgetContents_4)
        #self.procedureStep_widget.setStyleSheet("\n"
#"background-color: rgb(165, 165, 165) \n"
#"")
        #self.procedureStep_widget.setMinimumSize(1720, 200)  # Minimum width: 200, height: 100
        #self.procedureStep_widget.setMaximumSize(1725, 250)  # Maximum width: 500, height: 250
        #self.procedureStep_widget.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)



        #self.procedureStep_widget.setObjectName("procedureStep_widget")
        #self.verticalLayout_7.addWidget(self.procedureStep_widget)

        #self.gridLayout_4 = QtWidgets.QGridLayout(self.procedureStep_widget)
        #self.gridLayout_4.setObjectName("gridLayout_4")
        #self.procedureStep_buttons = QtWidgets.QWidget(self.procedureStep_widget)
        #self.procedureStep_buttons.setStyleSheet("background-color: rgb(245, 245, 245);;\n"
#"QWidget *widget = new QWidget();\n"
#"widget->setStyleSheet(\"border: 2px solid rgb(165, 165, 165);\");\n"
#"")
        #self.procedureStep_buttons.setObjectName("procedureStep_buttons")
        #self.procedureStep_buttons.setFixedSize(110, 180)  # Width: 200, Height: 100
        #self.gridLayout_6 = QtWidgets.QGridLayout(self.procedureStep_buttons)
        #self.gridLayout_6.setObjectName("gridLayout_6")
        #self.procedureStep_order = QtWidgets.QTextBrowser(self.procedureStep_buttons)
        #self.procedureStep_order.setObjectName("procedureStep_order")
        #self.procedureStep_order.setStyleSheet("""
    #QTextBrowser {
        #border: 2px solid grey;  /* Sets a 2px solid grey border */
        #border-radius: 3px;  /* Optional: rounded corners */
        #padding: 0px;             /* Removes any padding */
        #margin: 0px;
    #}
#""")
        #self.procedureStep_order.setFixedSize(50, 50)  # Width: 200, Height: 100

        #self.gridLayout_6.addWidget(self.procedureStep_order, 0, 0, 1, 2)
        #self.gridLayout_6.setContentsMargins(0,0,0,0)
        #self.up_procedureStep = QtWidgets.QToolButton(self.procedureStep_buttons)
        #icon10 = QtGui.QIcon()
        #icon10.addPixmap(QtGui.QPixmap("up_blue_grey.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        #self.up_procedureStep.setIconSize(QtCore.QSize(25, 25))
        #self.up_procedureStep.setStyleSheet("""
    #QToolButton {
        #background-color: rgb(245, 245, 245); /* Set the background color to off-white */
        
    #}
#""")
        #self.up_procedureStep.setIcon(icon10)
        #self.up_procedureStep.setObjectName("up_procedureStep")
        #self.gridLayout_6.addWidget(self.up_procedureStep, 1, 0, 1, 1)
        #self.delete_procedureStep = QtWidgets.QToolButton(self.procedureStep_buttons)
        #icon12 = QtGui.QIcon()
        #icon12.addPixmap(QtGui.QPixmap("trash_blue_grey.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        #self.delete_procedureStep.setIcon(icon12)
        #self.delete_procedureStep.setIconSize(QtCore.QSize(25, 25))
        #self.delete_procedureStep.setObjectName("delete_procedureStep")
        #self.gridLayout_6.addWidget(self.delete_procedureStep, 1, 3, 1, 1)
        #self.down_procedureStep = QtWidgets.QToolButton(self.procedureStep_buttons)
        #icon11 = QtGui.QIcon()
        #icon11.addPixmap(QtGui.QPixmap("down_blue_grey.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        #self.down_procedureStep.setIcon(icon11)
        #self.down_procedureStep.setIconSize(QtCore.QSize(25, 25))
        #self.down_procedureStep.setObjectName("down_procedureStep")
        #self.gridLayout_6.addWidget(self.down_procedureStep, 2, 0, 1, 1)
        #self.changeLog = QtWidgets.QToolButton(self.procedureStep_buttons)
        #icon7 = QtGui.QIcon()
        #icon7.addPixmap(QtGui.QPixmap("change_log_grey.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
     
        #self.changeLog.setIcon(icon7)
        #self.changeLog.setIconSize(QtCore.QSize(25, 25))
        #self.changeLog.setObjectName("changeLog")
        #self.gridLayout_6.addWidget(self.changeLog, 2, 3, 1, 1)
        #self.saveChanges = QtWidgets.QToolButton(self.procedureStep_buttons)
        #icon8 = QtGui.QIcon()
        #icon8.addPixmap(QtGui.QPixmap("check_mark_grey.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        #self.saveChanges.setIcon(icon8)
        #self.saveChanges.setIconSize(QtCore.QSize(25, 25))
        #self.saveChanges.setObjectName("saveChanges")
        #self.gridLayout_6.addWidget(self.saveChanges, 4, 0, 1, 1)
        #self.caancel_changes = QtWidgets.QToolButton(self.procedureStep_buttons)
        #icon9 = QtGui.QIcon()
        #icon9.addPixmap(QtGui.QPixmap("cross_grey.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        #self.caancel_changes.setIcon(icon9)
        #self.caancel_changes.setIconSize(QtCore.QSize(25, 25))
        #self.caancel_changes.setObjectName("caancel_changes")
        #self.gridLayout_6.addWidget(self.caancel_changes, 4, 3, 1, 1)
        #self.gridLayout_4.addWidget(self.procedureStep_buttons, 0, 0, 1, 1)


        #self.gridWidget = QtWidgets.QWidget(self.procedureStep_widget)
        #self.gridWidget.setStyleSheet("background-color: rgb(165, 165, 165);")
        #self.gridWidget.setObjectName("gridWidget")
        #self.gridLayout_5 = QtWidgets.QGridLayout(self.gridWidget)
        #self.gridLayout_5.setObjectName("gridLayout_5")
        

        #self.gridLayout_5.setContentsMargins(0, 0, 0, 0)  # Remove any padding or margins


        #self.procedureStep_header = QtWidgets.QWidget(self.gridWidget)
        #self.procedureStep_header.setStyleSheet("background: rgb(52, 152, 219)")
        #self.procedureStep_header.setObjectName("procedureStep_header")
        #self.procedureStep_header.setFixedSize(1460, 45)  # Minimum size
        

        #self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.procedureStep_header)
        #self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        #self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        #self.horizontalLayout_5.setSpacing(10)

        #self.object_header = QtWidgets.QTextEdit(self.procedureStep_header)
        #self.object_header.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        #self.object_header.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        #self.object_header.setReadOnly(True)
        #self.object_header.setObjectName("object_header")
        #self.object_header.setFixedSize(QtCore.QSize(245, 45))
        #self.object_header.setAlignment(QtCore.Qt.AlignCenter)
        #self.horizontalLayout_5.addWidget(self.object_header)
        #self.action_header = QtWidgets.QTextEdit(self.procedureStep_header)
        #self.action_header.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        #self.action_header.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        #self.action_header.setReadOnly(True)
        #self.action_header.setObjectName("action_header")
        #self.action_header.setFixedSize(QtCore.QSize(245, 45))
        #self.action_header.setAlignment(QtCore.Qt.AlignCenter)
        #self.horizontalLayout_5.addWidget(self.action_header)
        #self.executedBy_header = QtWidgets.QTextEdit(self.procedureStep_header)
        #self.executedBy_header.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        #self.executedBy_header.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        #self.executedBy_header.setReadOnly(True)
        #self.executedBy_header.setObjectName("executedBy_header")
        #self.executedBy_header.setFixedSize(QtCore.QSize(245, 45))
        #self.executedBy_header.setAlignment(QtCore.Qt.AlignCenter)
        #self.horizontalLayout_5.addWidget(self.executedBy_header)
        #self.physicalFeatures_header = QtWidgets.QTextEdit(self.procedureStep_header)
        #sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        #sizePolicy.setHorizontalStretch(0)
        #sizePolicy.setVerticalStretch(0)
        #sizePolicy.setHeightForWidth(self.physicalFeatures_header.sizePolicy().hasHeightForWidth())
        #self.physicalFeatures_header.setSizePolicy(sizePolicy)
        #self.physicalFeatures_header.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        #self.physicalFeatures_header.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        #self.physicalFeatures_header.setReadOnly(True)
        #self.physicalFeatures_header.setObjectName("physicalFeatures_header")
        #self.physicalFeatures_header.setFixedSize(QtCore.QSize(245, 45))
        #self.physicalFeatures_header.setAlignment(QtCore.Qt.AlignCenter)
        #self.horizontalLayout_5.addWidget(self.physicalFeatures_header)
        #self.outputParameter_header = QtWidgets.QTextEdit(self.procedureStep_header)
        #sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        #sizePolicy.setHorizontalStretch(0)
        #sizePolicy.setVerticalStretch(0)
        #sizePolicy.setHeightForWidth(self.outputParameter_header.sizePolicy().hasHeightForWidth())
        #self.outputParameter_header.setSizePolicy(sizePolicy)
        #self.outputParameter_header.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        #self.outputParameter_header.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        #self.outputParameter_header.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        #self.outputParameter_header.setReadOnly(True)
        #self.outputParameter_header.setObjectName("outputParameter_header")
        #self.outputParameter_header.setFixedSize(QtCore.QSize(245, 45))
        #self.outputParameter_header.setAlignment(QtCore.Qt.AlignCenter)
        #self.horizontalLayout_5.addWidget(self.outputParameter_header)
        #self.outputParameter_header_2 = QtWidgets.QTextEdit(self.procedureStep_header)
        #self.gridLayout_5.addWidget(self.procedureStep_header, 0, 0, 1, 7)
        #sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        #sizePolicy.setHorizontalStretch(0)
        #sizePolicy.setVerticalStretch(0)
        #sizePolicy.setHeightForWidth(self.outputParameter_header_2.sizePolicy().hasHeightForWidth())
        #self.outputParameter_header_2.setSizePolicy(sizePolicy)
        #self.outputParameter_header_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        #self.outputParameter_header_2.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        #self.outputParameter_header_2.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        #self.outputParameter_header_2.setReadOnly(True)
        #self.outputParameter_header_2.setObjectName("outputParameter_header_2")
        #self.outputParameter_header_2.setFixedSize(QtCore.QSize(195, 45))
        #self.object_header.setAlignment(QtCore.Qt.AlignCenter)
        #self.horizontalLayout_5.addWidget(self.outputParameter_header_2)
        #self.gridLayout_5.addWidget(self.procedureStep_header, 0, 0, 1, 7)
        #self.horizontalLayout_plainTextEdits = QtWidgets.QHBoxLayout()
        #self.object_plainTextEdit = QtWidgets.QPlainTextEdit(self.gridWidget)
        #self.object_plainTextEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        #self.object_plainTextEdit.setObjectName("object_plainTextEdit")
        #self.object_plainTextEdit.setMinimumSize(QtCore.QSize(245, 150))  # Minimum width: 150, height: 80
        #self.object_plainTextEdit.setMaximumSize(QtCore.QSize(245, 200))

        #self.horizontalLayout_plainTextEdits.addWidget(self.object_plainTextEdit)
        
        #self.action_plainTextEdit = QtWidgets.QPlainTextEdit(self.gridWidget)
        #self.action_plainTextEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        #self.action_plainTextEdit.setObjectName("action_plainTextEdit")
        #self.action_plainTextEdit.setMinimumSize(QtCore.QSize(245, 150))  # Minimum width: 150, height: 80
        #self.action_plainTextEdit.setMaximumSize(QtCore.QSize(245, 200))
        #self.horizontalLayout_plainTextEdits.addWidget(self.action_plainTextEdit)
        

        #self.executedBy_plainTextEdit = QtWidgets.QPlainTextEdit(self.gridWidget)
        #self.executedBy_plainTextEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        #self.executedBy_plainTextEdit.setObjectName("executedBy_plainTextEdit")
        #self.executedBy_plainTextEdit.setMinimumSize(QtCore.QSize(245, 150))  # Minimum width: 150, height: 80
        #self.executedBy_plainTextEdit.setMaximumSize(QtCore.QSize(245, 200))
        #self.horizontalLayout_plainTextEdits.addWidget(self.executedBy_plainTextEdit)
        

        #self.physicalFeatures_plainTextEdit = QtWidgets.QPlainTextEdit(self.gridWidget)
        #self.physicalFeatures_plainTextEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        #self.physicalFeatures_plainTextEdit.setObjectName("physicalFeatures_plainTextEdit")
        #self.physicalFeatures_plainTextEdit.setMinimumSize(QtCore.QSize(245, 150))  # Minimum width: 150, height: 80
        #self.physicalFeatures_plainTextEdit.setMaximumSize(QtCore.QSize(245, 200))
        #self.horizontalLayout_plainTextEdits.addWidget(self.physicalFeatures_plainTextEdit)
        
        #self.output_plainTextEdit = QtWidgets.QPlainTextEdit(self.gridWidget)
        #self.output_plainTextEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        #self.output_plainTextEdit.setObjectName("output_plainTextEdit")
        #self.output_plainTextEdit.setMinimumSize(QtCore.QSize(245, 150))  # Minimum width: 150, height: 80
        #self.output_plainTextEdit.setMaximumSize(QtCore.QSize(245, 200))
        #self.horizontalLayout_plainTextEdits.addWidget(self.output_plainTextEdit)
        
        #self.buttonBox_additional_info = QtWidgets.QPlainTextEdit(self.gridWidget)
        #self.buttonBox_additional_info.setStyleSheet("""
    #QPlainTextEdit {
        #background-color: rgb(255, 255, 255);  /* White background */

        
    #}
#""")
        #self.buttonBox_additional_info.setObjectName("buttonBox_additional_info")
        #self.buttonBox_additional_info.setFixedSize(QtCore.QSize(195, 170))  
        #self.buttonBox_additional_info.setReadOnly(True)

        
        #self.verticalLayout_additional_info = QtWidgets.QVBoxLayout(self.buttonBox_additional_info)
        #self.verticalLayout_additional_info.setAlignment(QtCore.Qt.AlignCenter)
        #self.buttonsContainer = QtWidgets.QWidget(self.gridWidget)
        #self.buttonsContainer.setStyleSheet("""
    #QWidget {
        #background-color: rgb(255, 255, 255); /* Remove background color */

        
    #}
#""")
        #self.buttonsContainer.setObjectName("buttonsContainer")
        #self.buttonsContainer.setFixedSize(QtCore.QSize(200, 120))  # Adjust the size as needed

        #self.verticalLayout_buttons = QtWidgets.QVBoxLayout(self.buttonsContainer)
        #self.verticalLayout_buttons.setAlignment(QtCore.Qt.AlignCenter)  # Center the buttons inside the container
        #self.verticalLayout_buttons.setContentsMargins(0, 0, 30, 0)
        #self.verticalLayout_buttons.setSpacing(10)  # Adds 20px space between buttons

        #self.rationale_button = QtWidgets.QPushButton(self.buttonsContainer)
        #self.rationale_button.setStyleSheet("background-color: rgb(52, 152, 219);\n"
#"\n"
#"color: rgb(255, 255, 255);\n"
#"")
        #self.rationale_button.setObjectName("rationale_button")
        #self.rationale_button.setFixedSize(QtCore.QSize(120, 35))
       
        #self.verticalLayout_buttons.addWidget(self.rationale_button)
       
        
        #self.comments_button = QtWidgets.QPushButton(self.buttonsContainer)
        #self.comments_button.setStyleSheet("background-color: rgb(52, 152, 219);\n"
#"color: rgb(255, 255, 255);\n"
#"")
        #self.comments_button.setObjectName("comments_button")
        #self.comments_button.setFixedSize(QtCore.QSize(120, 35))  # Fixed size of width 120px and height 60px
        #self.verticalLayout_buttons.addWidget(self.comments_button)

        #self.verticalLayout_additional_info.addWidget(self.buttonsContainer)
        #self.horizontalLayout_plainTextEdits.addWidget(self.buttonBox_additional_info)
        

        
        #self.systems_pushButton = QtWidgets.QPushButton(self.gridWidget)
        #self.systems_pushButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
#"color:  rgb(52, 152, 219);  font-weight: bold;")
        #self.systems_pushButton.clicked.connect(self.open_systems_dialog)

        #self.systems_pushButton.setObjectName("systems_pushButton")
        #self.gridLayout_5.addWidget(self.systems_pushButton, 1, 7, 1, 1)
        #self.gridLayout_4.addWidget(self.gridWidget, 0, 1, 1, 1)
        #self.verticalLayout_7.addWidget(self.procedureStep_widget)
        #self.gridLayout_5.addLayout(self.horizontalLayout_plainTextEdits, 1, 0, 1, 7)

        #self.checkpoint_widget = QtWidgets.QWidget(self.scrollAreaWidgetContents_4)
        #self.checkpoint_widget.setStyleSheet("QWidget {\n"
#"    border: 3px solid black; /* 5px for thickness, solid for style, black for color */\n"
#"    border-color: red;\n"
#"    border-radius: 3px;     /* Optional: makes the corners rounded */\n"
#"}\n"
#"\n"
#"")
        #self.checkpoint_widget.setObjectName("checkpoint_widget")
        #self.checkpoint_widget.setFixedSize(QtCore.QSize(1725, 250))  
        #self.verticalLayout_7.addWidget(self.checkpoint_widget)

        #self.gridLayout_3 = QtWidgets.QGridLayout(self.checkpoint_widget)
        #self.gridLayout_3.setObjectName("gridLayout_3")
        #self.checnpoint_label = QtWidgets.QLabel(self.checkpoint_widget)
        #self.checnpoint_label.setStyleSheet("QLabel {\n"
#"    background-color: none;  /* Removes background color */\n"
#"    border: none;            /* Removes border */\n"
#"    color: red;            /* Set text color explicitly */\n"
#"}\n"
#"")
        #self.checnpoint_label.setObjectName("checnpoint_label")
        #self.checnpoint_label.setFixedSize(300, 50)
        #self.gridLayout_3.addWidget(self.checnpoint_label, 0, 0, 1, 1)
        #self.requiredInput_widget = QtWidgets.QWidget(self.checkpoint_widget)
        #self.requiredInput_widget.setStyleSheet("QWidget{\n"
#"    border: none;                /* 2px border with solid style */\n"
#"    border-color: rgb(39, 174, 96);   /* Custom green border color */             /* Optional: add some padding around the text */\n"
#"background-color: rgb(255, 255, 255);\n"
#"}\n"
#"")
        #self.requiredInput_widget.setObjectName("requiredInput_widget")
        #self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.requiredInput_widget)
        #self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        #self.gridWidget1 = QtWidgets.QWidget(self.requiredInput_widget)
        #self.gridWidget1.setFixedSize(650, 250)
        #self.gridWidget1.setObjectName("gridWidget1")

        # Create a vertical layout for the widget
        #self.verticalLayout_req_input = QtWidgets.QVBoxLayout(self.gridWidget1)
        #self.verticalLayout_req_input.setObjectName("verticalLayout_req_input")
        #self.verticalLayout_req_input.setAlignment(QtCore.Qt.AlignTop)
        #self.verticalLayout_req_input.setContentsMargins(0,0,0,0)
        #self.verticalLayout_req_input.setSpacing(0)
       

        # Add the header label to the vertical layout
        #self.req_input_header = QtWidgets.QLabel(self.gridWidget1)
        #self.req_input_header.setFixedSize(600, 30)
        #self.req_input_header.setContentsMargins(0,0,0,0)
        #self.req_input_header.setStyleSheet("""
#QLabel{
    #border: 2px solid;
    #border-color: red;
    #background-color: rgb(255, 255, 255);
    #border-radius: 0px;
#}
#""")
        #self.req_input_header.setObjectName("req_input_header")
        #self.verticalLayout_req_input.addWidget(self.req_input_header)

        # Add the list widget to the vertical layout
        #self.req_input_listWidget = QtWidgets.QListWidget(self.gridWidget1)
        #self.req_input_listWidget.setFixedSize(600,190)
        #self.req_input_listWidget.setContentsMargins(0,0,0,0)
        #self.req_input_listWidget.setStyleSheet("""
#QListWidget{
    #border: 2px solid;
    #border-color: red;
    #background-color: rgb(255, 255, 255);
    #border-radius: 0px;
#}
#""")
        #self.req_input_listWidget.setObjectName("req_input_listWidget")
        #self.verticalLayout_req_input.addWidget(self.req_input_listWidget)

     # Add gridWidget1 to the main layout
        #self.horizontalLayout_3.addWidget(self.gridWidget1)
        #self.horizontalLayout_3.setContentsMargins(0,0,0,0)
        #self.pushButton = QtWidgets.QPushButton(self.requiredInput_widget)
        #self.pushButton.setMouseTracking(True)
        #self.pushButton.setFocusPolicy(QtCore.Qt.StrongFocus)
        #self.pushButton.setStyleSheet("QPushButton {\n"
#"    border: 3px solid;                /* 2px border with solid style */\n"
#"    border-color: red;   /* Custom green border color */\n"
#"              /* Removes border */\n"
#"    color: black            /* Set text color explicitly */\n"
#"}\n"
#"     \n"
#"\n"
#"QPushButton:hover {\n"
#"    background-color: darkgray;    /* Visual change on hover */\n"
#"}\n"
#"")
        #self.pushButton.setCheckable(False)
        #self.pushButton.setAutoDefault(False)
        #self.pushButton.setFixedSize(300,35)
        #self.pushButton.setObjectName("pushButton")
        #self.horizontalLayout_3.addWidget(self.pushButton)
        #self.gridLayout_3.addWidget(self.requiredInput_widget, 0, 1, 1, 1)
        #self.verticalLayout_7.addWidget(self.checkpoint_widget)
        self.scrollArea_procedure_list.setWidget(self.scrollAreaWidgetContents_4)
        self.verticalLayout_3.addWidget(self.scrollArea_procedure_list)
        self.addInfo_widget = QtWidgets.QWidget(self.scrollAreaWidgetContents_2)
        self.addInfo_widget.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.addInfo_widget.setObjectName("addInfo_widget")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.addInfo_widget)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.addInfo_widget_blue = QtWidgets.QWidget(self.addInfo_widget)
        self.addInfo_widget_blue.setStyleSheet("background:rgb(52, 152, 219);\n"
"")
        self.addInfo_widget_blue.setObjectName("addInfo_widget_blue")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.addInfo_widget_blue)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.commentsProcedure_button = QtWidgets.QPushButton(self.addInfo_widget_blue)
        self.commentsProcedure_button.setStyleSheet("background-color: rgb(165, 165, 165);\n"
"color: rgb(255, 255, 255);")
        self.commentsProcedure_button.setObjectName("commentsProcedure_button")
        #self.commentsProcedure_button.clicked.connect(self.open_comments_procedure_dialog)
        self.horizontalLayout_4.addWidget(self.commentsProcedure_button)
        self.referencesProcedure_button = QtWidgets.QPushButton(self.addInfo_widget_blue)
        self.referencesProcedure_button.setStyleSheet("background-color: rgb(165, 165, 165);\n"
"color: rgb(255, 255, 255);")
        self.referencesProcedure_button.setCheckable(False)
        self.referencesProcedure_button.setObjectName("referencesProcedure_button")
        #self.referencesProcedure_button.clicked.connect(self.open_references_procedure_dialog)
        self.horizontalLayout_4.addWidget(self.referencesProcedure_button)
        self.verticalLayout_6.addWidget(self.addInfo_widget_blue)
        self.verticalLayout_3.addWidget(self.addInfo_widget)
        self.scrollArea_Flightflow.setWidget(self.scrollAreaWidgetContents_2)
        self.horizontalLayout_2.addWidget(self.scrollArea_Flightflow)
        flightFlow_main_window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(flightFlow_main_window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1200, 18))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuExport = QtWidgets.QMenu(self.menubar)
        self.menuExport.setObjectName("menuExport")
        flightFlow_main_window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(flightFlow_main_window)
        self.statusbar.setObjectName("statusbar")
        flightFlow_main_window.setStatusBar(self.statusbar)
        self.actionNew = QtWidgets.QAction(flightFlow_main_window)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtWidgets.QAction(flightFlow_main_window)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(flightFlow_main_window)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_As = QtWidgets.QAction(flightFlow_main_window)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionDelete = QtWidgets.QAction(flightFlow_main_window)
        self.actionDelete.setObjectName("actionDelete")
        self.actionExport_as_PDF = QtWidgets.QAction(flightFlow_main_window)
        self.actionExport_as_PDF.setObjectName("actionExport_as_PDF")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addAction(self.actionDelete)
        self.menuExport.addAction(self.actionExport_as_PDF)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuExport.menuAction())

        self.retranslateUi(flightFlow_main_window)
        self.flightPhases_tabs.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(flightFlow_main_window)
      
   # def update_position_comboBox(self, flightPhase_widget):
     #"""Updates the position combo box based on the updated order of flight phases."""
     #dialog_ui = flightPhase_widget.main_window.enter_new_flight_phase_ui  # Assuming you have a reference to the current dialog
     #selected_operation_type = dialog_ui.corresponding_operation_comboBox.currentText()
     #self.populate_position_comboBox(dialog_ui, selected_operation_type)  # Repopulate the combo box








    def retranslateUi(self, flightFlow_main_window):
        _translate = QtCore.QCoreApplication.translate
        flightFlow_main_window.setWindowTitle(_translate("flightFlow_main_window", "MainWindow"))
        #self.delete_flightPhase.setText(_translate("flightFlow_main_window", "..."))
        #self.flightPhase_label.setText(_translate("flightFlow_main_window", "<html><head/><body><p align=\"center\"><span style=\" font-size:9pt; font-weight:600; color:#ffffff;\">Flight Phases</span></p></body></html>"))
        #self.up_flightPhase.setText(_translate("flightFlow_main_window", "..."))
        #self.down_flightPhase.setText(_translate("flightFlow_main_window", "..."))
        #self.edit_flightPhase.setText(_translate("flightFlow_main_window", "..."))
        #self.systems_flightPhase.setText(_translate("flightFlow_main_window", "..."))
        self.flightPhases_tabs.setTabText(self.flightPhases_tabs.indexOf(self.normal_operations), _translate("flightFlow_main_window", "Normal Operations"))
        #self.flightPhases_tabs.setTabText(self.flightPhases_tabs.indexOf(self.tab_2), _translate("flightFlow_main_window", "Tab 2"))
        self.newOperationType_button.setText(_translate("flightFlow_main_window", "New Operation Type"))
        self.newFlightPhase_button.setText(_translate("flightFlow_main_window", "New Flight Phase"))
        self.label_warning.setText(_translate("flightFlow_main_window", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:600;\">Warnings</span></p></body></html>"))
        #self.warning_display.setText(_translate("flightFlow_main_window", ""))
        self.new_procedureStep.setText(_translate("flightFlow_main_window", "  New Step"))
        self.reload.setText(_translate("flightFlow_main_window", "..."))
        #self.up_procedureStep.setText(_translate("flightFlow_main_window", "..."))
        #self.delete_procedureStep.setText(_translate("flightFlow_main_window", "..."))
        #self.down_procedureStep.setText(_translate("flightFlow_main_window", "..."))
        #self.changeLog.setText(_translate("flightFlow_main_window", "..."))
        #self.saveChanges.setText(_translate("flightFlow_main_window", "..."))
        #self.caancel_changes.setText(_translate("flightFlow_main_window", "..."))
        #self.object_header.setHtml(_translate("flightFlow_main_window", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
#"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
#"p, li { white-space: pre-wrap; }\n"
#"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
#"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600; color:#ffffff;\">Object</span></p></body></html>"))
        #self.action_header.setHtml(_translate("flightFlow_main_window", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
#"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
#"p, li { white-space: pre-wrap; }\n"
#"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
#"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600; color:#ffffff;\">Action</span></p></body></html>"))
        #self.executedBy_header.setHtml(_translate("flightFlow_main_window", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
#"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
#"p, li { white-space: pre-wrap; }\n"
#"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
#"<p align=\"center\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600; color:#ffffff;\">Executed By</span></p></body></html>"))
        #self.physicalFeatures_header.setHtml(_translate("flightFlow_main_window", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
#"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
#"p, li { white-space: pre-wrap; }\n"
#"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
#"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600; color:#ffffff;\">Physical Features</span></p></body></html>"))
        #self.outputParameter_header.setHtml(_translate("flightFlow_main_window", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
#"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
#"p, li { white-space: pre-wrap; }\n"
#"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
#"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600; color:#ffffff;\">Output Parameters</span></p></body></html>"))
        #self.outputParameter_header_2.setHtml(_translate("flightFlow_main_window", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
#"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
#"p, li { white-space: pre-wrap; }\n"
#"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
#"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600; color:#ffffff;\">Additional Information</span></p></body></html>"))
        #self.rationale_button.setText(_translate("flightFlow_main_window", "Rationale"))
        #self.systems_pushButton.setText(_translate("flightFlow_main_window", "Systems"))
        #self.comments_button.setText(_translate("flightFlow_main_window", "Comments"))
        #self.checnpoint_label.setText(_translate("flightFlow_main_window", "<html><head/><body><p align=\"center\"><span style=\" font-size:16pt; font-weight:600;\">Checkpoint</span></p></body></html>"))
        #self.req_input_header.setText(_translate("flightFlow_main_window", "<html><head/><body><p align=\"center\"><span style=\" font-weight:600;\">Input</span></p></body></html>"))
        #self.pushButton.setText(_translate("flightFlow_main_window", "Set Required Input Parameters"))
        self.commentsProcedure_button.setText(_translate("flightFlow_main_window", "Comments for Procedures"))
        self.referencesProcedure_button.setText(_translate("flightFlow_main_window", "References for Procedures"))

        self.menuFile.setTitle(_translate("flightFlow_main_window", "File"))
        self.menuExport.setTitle(_translate("flightFlow_main_window", "Export"))
        self.actionNew.setText(_translate("flightFlow_main_window", "New"))
        self.actionOpen.setText(_translate("flightFlow_main_window", "Open"))
        self.actionSave.setText(_translate("flightFlow_main_window", "Save"))
        self.actionSave_As.setText(_translate("flightFlow_main_window", "Save As"))
        self.actionDelete.setText(_translate("flightFlow_main_window", "Delete"))
        self.actionExport_as_PDF.setText(_translate("flightFlow_main_window", "Export as PDF"))
  



    
    




   


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)  # Create the application object
    MainWindow = QtWidgets.QMainWindow()    # Create the main window object
    ui = Ui_flightFlow_main_window()        # Create an instance of the Ui class
    ui.setupUi(MainWindow)                  # Set up the UI in the main window
    MainWindow.showMaximized()              # Show the main window maximized
    sys.exit(app.exec_())
